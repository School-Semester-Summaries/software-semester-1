<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="HubTimer.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>